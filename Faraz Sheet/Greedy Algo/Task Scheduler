class Solution {
    public int leastInterval(char[] tasks, int n) {
        HashMap<Character, Integer> map = new HashMap<>();
        for(char task: tasks)
        {
            map.put(task,map.getOrDefault(task,0)+1);
        }
        PriorityQueue<Integer> maxHeap=new PriorityQueue<>((a,b) -> b - a);
        maxHeap.addAll(map.values());
        int cycles = 0;
        while(!maxHeap.isEmpty())
        {
            List<Integer> temp = new ArrayList<>();
            for(int i=0;i<n+1;i++)
            {
                if(!maxHeap.isEmpty())
                {
                    temp.add(maxHeap.remove());
                }
            }
            for(int i:temp )
            {
                if(--i>0)
                {
                    maxHeap.add(i);
                }
            }
            cycles += maxHeap.isEmpty()?temp.size():n+1;
        }
        return cycles;
    }
}
