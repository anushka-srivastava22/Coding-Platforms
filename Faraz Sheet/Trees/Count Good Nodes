/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int goodNodes(TreeNode root) {
        if(root == null)
        {
            return 0;
        }
        if(root.left == null && root.right == null)
        {
            return 1;
        }
        int goodOnes = findNodes(root,root.val);
        return goodOnes;
    }
    public int findNodes(TreeNode root, int prevNode)
    {
        if(root == null)
        {
            return 0;
        }
        if(prevNode <= root.val)
        {
            return 1 + findNodes(root.left, root.val) + findNodes(root.right,root.val);
        }
        return findNodes(root.left,prevNode) + findNodes(root.right,prevNode);
    }
    
}
