class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res=new ArrayList<>();
        List<Integer> curr=new ArrayList<>();
        Arrays.sort(candidates);
        findCombineSum(candidates,0,target,curr,res);
        return res;
    }
    public void findCombineSum(int[] candidates, int index, int target,  List<Integer> curr, List<List<Integer>> res)
    {
        if(target==0)
        {
            res.add(new ArrayList<>(curr));
            return;
        }
        for(int i=index;i<candidates.length;i++)
        {
            if(i>index && candidates[i] == candidates[i-1])
            {
                continue;
            }
            if(candidates[i] > target)
            {
                break;
            }
            curr.add(candidates[i]);
            findCombineSum(candidates, i+1, target - candidates[i], curr,res);
            curr.remove(curr.size() - 1);
        }
        
    }
}
