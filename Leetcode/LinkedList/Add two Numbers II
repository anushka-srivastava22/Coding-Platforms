class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode new1 = reverse(l1);
        ListNode new2 = reverse(l2);
        ListNode newnode = new ListNode(0);
        ListNode curr = newnode;
        ListNode head1= new1;
        ListNode head2 = new2;
        int carry = 0;
        
        while(head1 != null || head2 != null)
        {
            int x = (head1 != null) ? head1.val : 0;
            int y = (head2 != null) ? head2.val : 0;
            int sum = carry+x+y;
            carry = sum/10;
            
            curr.next = new ListNode(sum % 10);
            curr = curr.next;
            
            if(head1 != null)
                head1 = head1.next;
            if(head2 != null)
                head2  =head2.next;
        }
        if(carry > 0)
            curr.next = new ListNode(carry);
        
        return reverse(newnode.next);
    }
    public ListNode reverse(ListNode head)
    {
        ListNode curr = head;
        ListNode prev = null, next = null;
        while(curr != null)
        {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr=  next;
        }
        return prev;
    }
}
